{"version":3,"file":"static/js/33.6f91fa43.chunk.js","mappings":"iRAiDMA,GAAkBC,EAAAA,EAAAA,IAAoB,CAC1CC,iBAAkBC,EAAAA,GAClBC,YAAaC,EAAAA,KCjDf,GDoDeC,EAAAA,EAAAA,IAAQN,EAAvB,EAxCoB,SAAAO,GAClB,IAAOC,EAAYD,EAAZC,SACP,GAA8CC,EAAAA,EAAAA,UAAS,MAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAQJ,GAAmBA,EAAgBK,OAASL,EAAgBK,MAAMC,YAAcN,EAAgBK,MAAMC,WAAW,GAAGC,WAAWC,SACvIC,EAAmBL,EAAQM,EAAAA,GAAAA,6BAAqCN,EAAO,KAAM,GAAI,IAAI,WAAQ,IAAEO,KAAI,SAAAC,GAAY,OAAIA,EAAaC,IAAjB,IAAyB,KACxIC,EAAahB,EAAWiB,EAAAA,GAAeC,EAAAA,GAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAKf,EAAQ,CACX,IAAMgB,EAAOC,EAAAA,EAAAA,KAAA,WACPC,GAAYC,EAAAA,EAAAA,IAAGH,GAErB,OADAf,EAAUiB,GACH,kBAAMA,EAAUE,OAAhB,CACR,CACF,GAAE,CAACpB,EAAQC,IAERD,GACFA,EAAOqB,GAAG,WAAW,SAAAC,GAAO,OAAIvB,EAAmBuB,EAAvB,IAG9BC,QAAQC,IAAI1B,IAEJ,SAAC2B,EAAA,EAAD,CAAaC,QAASd,EAAtB,UACF,gBAAKe,UAAU,gBAAf,SACGpB,KAGV,G","sources":["app/pages/LivePreview/LivePreview.jsx","app/pages/LivePreview/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {createPropsSelector} from \"reselect-immutable-helpers\";\nimport { io } from \"socket.io-client\";\nimport { getPresentComponentsConfig } from \"../ComponentCreator/selectors\";\nimport { getUserDetails } from \"../../global-selectors\";\nimport { compGen } from \"../../utils/CodeUtils/ComponentGenerator\";\nimport { DndProvider } from \"react-dnd\";\nimport {HTML5Backend as Backend} from \"react-dnd-html5-backend\"\nimport {TouchBackend} from \"react-dnd-touch-backend\"\nimport API_CONFIG from \"../../constants/api-config\";\nimport \"./LivePreview.module.scss\";\n\nconst LivePreview = props => {\n  const {isMobile} = props;\n  const [componentConfig, setComponentConfig] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const items = componentConfig && componentConfig.value && componentConfig.value.components && componentConfig.value.components[0].descriptor.children;\n  const componentRenders = items ? compGen.iterateAndGenerateWithConfig(items, null, \"\", \"\", () => {}).map(componentObj => componentObj.item) : null;\n  const dndBackend = isMobile ? TouchBackend : Backend;\n\n  useEffect(() => {\n    if (!socket) {\n      const host = API_CONFIG.HOST[process.env.NODE_ENV || \"development\"];\n      const newSocket = io(host);\n      setSocket(newSocket);\n      return () => newSocket.close();\n    }\n  }, [socket, setSocket])\n\n  if (socket) {\n    socket.on(\"message\", message => setComponentConfig(message));\n  }\n\n  console.log(componentConfig);\n\n  return (<DndProvider backend={dndBackend}>\n        <div className=\"c-LivePreview\">\n          {componentRenders}\n        </div>\n    </DndProvider>);\n};\n\nLivePreview.propTypes = {\n  componentsConfig: PropTypes.object,\n  userDetails: PropTypes.object\n};\n\nconst mapStateToProps = createPropsSelector({\n  componentsConfig: getPresentComponentsConfig,\n  userDetails: getUserDetails\n})\n\nexport default connect(mapStateToProps)(LivePreview);","import LivePreview from \"./LivePreview.jsx\";\n\nexport default LivePreview;"],"names":["mapStateToProps","createPropsSelector","componentsConfig","getPresentComponentsConfig","userDetails","getUserDetails","connect","props","isMobile","useState","componentConfig","setComponentConfig","socket","setSocket","items","value","components","descriptor","children","componentRenders","compGen","map","componentObj","item","dndBackend","TouchBackend","Backend","useEffect","host","API_CONFIG","newSocket","io","close","on","message","console","log","DndProvider","backend","className"],"sourceRoot":""}