{"version":3,"file":"static/js/357.7e4ca7f5.chunk.js","mappings":"kRAYMA,EAA4BC,IAAS,CACvCC,OAAQ,kBAAM,6BAAN,EACRC,QAASC,EAAAA,aAGPC,EAAgCJ,IAAS,CAC3CC,OAAQ,kBAAM,qDAAN,EACRC,QAASC,EAAAA,aA0Bb,IC3C2BE,ED2CrBC,GAAkBC,EAAAA,EAAAA,IAAoB,CACxCC,YAAaC,EAAAA,KAGXC,EAAqB,CACzBC,oBAAAA,EAAAA,IAGF,GAAeC,EAAAA,EAAAA,IAAQN,EAAiBI,EAAxC,ECnD2BL,EDoB3B,SAAoBQ,GAClB,IAAQL,EAAgBK,EAAhBL,YACFM,GAAWC,EAAAA,EAAAA,MACXC,IAAeC,EAAAA,EAAAA,UAAiB,sBAChCC,EAAeV,GAAeA,EAAYW,MAAQX,EAAYW,OAASC,EAAAA,GAAAA,MAS7E,OARKJ,EAGIE,GACHV,GAAeM,EAAS,IAAMN,EAAYa,UAH9CP,EAAS,WAOJ,UAAC,KAAD,YACL,SAAC,KAAD,CAAOQ,KAAK,IAAIC,SAAS,SAACxB,EAAD,OACzB,SAAC,KAAD,CAAOuB,KAAK,YAAYC,SAAS,SAACxB,EAAD,OACjC,SAAC,KAAD,CAAOuB,KAAK,gBAAgBC,SAAS,SAACxB,EAAD,OACrC,SAAC,KAAD,CAAOuB,KAAK,mBAAmBC,SAAS,SAACnB,EAAD,OACxC,SAAC,KAAD,CAAOkB,KAAK,OAAOC,SAAS,SAACxB,EAAD,OAC5B,SAAC,KAAD,CAAOuB,KAAK,UAAUC,SAAS,SAACxB,EAAD,QAElC,ECxCmB,SAACc,GACb,IAAMW,GAAUT,EAAAA,EAAAA,MAEhB,OACI,SAACV,GAAD,QACImB,QAASA,GACLX,GAGf,G","sources":["app/authorizer.js","app/HOC/withRouter.js"],"sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Loadable from \"react-loadable\"\nimport {createPropsSelector} from \"reselect-immutable-helpers\";\nimport {withRouter} from \"./HOC/withRouter\";\nimport { PageLoader } from \"./components\";\nimport { dispatchUserDetails } from \"./global-actions\";\nimport { getUserDetails } from \"./global-selectors\";\nimport Helper from \"./utils/Helper\";\nimport { ROLES } from \"./constants/types\";\n\nconst LoadableComponentImporter = Loadable({\n    loader: () => import(\"./pages/ComponentImporter\"),\n    loading: PageLoader\n})\n\nconst LoadableAdminComponentManager = Loadable({\n    loader: () => import(\"./pages/AdminComponentManager\"),\n    loading: PageLoader\n})\n\nfunction Authorizer(props) {\n  const { userDetails } = props;\n  const navigate = useNavigate();\n  const isLoggedIn = !!Helper.getCookie(\"auth_session_token\");\n  const isAuthorized = userDetails && userDetails.role && userDetails.role === ROLES.ADMIN;\n  if (!isLoggedIn) {\n    navigate(\"/login\");\n  } else {\n      if (!isAuthorized) {\n        userDetails && navigate(\"/\" + userDetails.username);\n      }\n  }\n\n  return <Routes>\n    <Route path=\"/\" element={<LoadableComponentImporter />} />\n    <Route path=\"component\" element={<LoadableComponentImporter />} />\n    <Route path=\"component/add\" element={<LoadableComponentImporter />} />\n    <Route path=\"component/update\" element={<LoadableAdminComponentManager />} />\n    <Route path=\"page\" element={<LoadableComponentImporter />} />\n    <Route path=\"project\" element={<LoadableComponentImporter />} />\n  </Routes>\n}\n\nconst mapStateToProps = createPropsSelector({\n    userDetails: getUserDetails\n})\n\nconst mapDispatchToProps = {\n  dispatchUserDetails\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Authorizer))","import { useNavigate } from \"react-router-dom\";\n\nexport const withRouter = (Component) => {\n    const Wrapper = (props) => {\n        const history = useNavigate();\n\n        return (\n            <Component\n                history={history}\n                {...props}\n            />\n        );\n    };\n\n    return Wrapper;\n};"],"names":["LoadableComponentImporter","Loadable","loader","loading","PageLoader","LoadableAdminComponentManager","Component","mapStateToProps","createPropsSelector","userDetails","getUserDetails","mapDispatchToProps","dispatchUserDetails","connect","props","navigate","useNavigate","isLoggedIn","Helper","isAuthorized","role","ROLES","username","path","element","history"],"sourceRoot":""}