{"version":3,"file":"static/js/69.7d661450.chunk.js","mappings":"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","sources":["app/utils/vanillaDragger.js","app/pages/ComponentCreator/ComponentCreator.jsx","app/pages/ComponentCreator/index.js"],"sourcesContent":["function dragManager(elmnt, handle, cb) {\n    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n    // if drag handle present, the header is where you move the DIV from; otherwise, move the DIV from anywhere inside the DIV::\n    const dragHandle = document.getElementById(handle) || (elmnt && (document.getElementById(elmnt.id + \"header\") || elmnt));\n    dragHandle && (dragHandle.onmousedown = dragMouseDown);\n\n    function dragMouseDown(e) {\n        e = e || window.event;\n        e.preventDefault();\n        // get the mouse cursor position at startup:\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        document.onmouseup = closeDragElement;\n        // call a function whenever the cursor moves:\n        document.onmousemove = elementDrag;\n    }\n\n    function elementDrag(e) {\n        cb(true);\n        e.preventDefault();\n        e = e || window.event;\n        e.preventDefault();\n        // calculate the new cursor position:\n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientY;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        // set the element's new position:\n        elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n        elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n    }\n\n    function closeDragElement() {\n        setTimeout(() => cb(false), 100)\n        // stop moving when mouse button is released:\n        document.onmouseup = null;\n        document.onmousemove = null;\n    }\n}\n\nexport default dragManager;","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as $ from \"jquery\";\nimport { connect } from \"react-redux\";\nimport { createPropsSelector } from \"reselect-immutable-helpers\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport io from \"socket.io-client\";\nimport { getToggles, getUserDetails, isMobile } from \"../../global-selectors\";\nimport { getPresentComponentsConfig, getSelectedComponent } from \"./selectors\";\nimport { dispatchComponentsConfig, dispatchSelectedComponent } from \"./actions\";\nimport {\n  Aside,\n  ComponentContainerWrapper,\n  Main,\n  Logger,\n  ToolActionContainer,\n  WidgetContainer,\n} from \"../../components\";\nimport registerDragFor from \"../../utils/vanillaDragger\";\nimport useEventHandler from \"../../hooks/useEventHandler\";\nimport { Helper } from \"../../utils\";\nimport API_CONFIG from \"../../constants/api-config\";\nimport \"./ComponentCreator.module.scss\";\n\nlet location;\n\nfunction setDropLocation(...locationIncoming) {\n  location = locationIncoming;\n}\n\nconst ComponentCreator = (props) => {\n  const {\n    componentConfig,\n    dispatchComponentsConfig,\n    dispatchSelectedComponent,\n    isMobile,\n    selectedComponent,\n    toggles,\n    user,\n  } = props;\n  const [clientRect, setClientRect] = useState({});\n  const [socket, setSocket] = useState(null);\n  const [widgetDragging, setWidgetDragging] = useState(false);\n  const setDropLocationDebounced = Helper.debounce(setDropLocation);\n  const { handleKeyDown, handleKeyUp, handleOnClick } = useEventHandler({\n    socket,\n  });\n  const draggable = useRef(null);\n  const dndBackend = isMobile ? TouchBackend : HTML5Backend;\n  const devModeToggle =\n    toggles && toggles.find((toggle) => toggle.name === \"developerMode\");\n  const floatingLayout =\n    toggles && toggles.find((toggle) => toggle.name === \"layout\");\n  const isDevMode = devModeToggle && devModeToggle.selected;\n\n  useEffect(() => {\n    if (!socket) {\n      const host = API_CONFIG.HOST[process.env.NODE_ENV || \"development\"];\n      const newSocket = io(host);\n      setSocket(newSocket);\n      return () => newSocket.close();\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    floatingLayout &&\n      floatingLayout.selected &&\n      registerDragFor(\n        document.getElementById(\"i-WidgetContainer\"),\n        \"i-WidgetContainer__accordion-handle\",\n        setWidgetDragging\n      );\n  }, [floatingLayout]);\n\n  useEffect(() => {\n    // const container = $(\".c-ComponentCreator\");\n    // container && container.overlayScrollbars({ })\n  }, []);\n\n  // return <DndProvider backend={Backend}>\n  return (\n    <DndProvider debugMode={true} backend={dndBackend}>\n      <div className=\"c-ComponentCreator d-flex flex-column flex-nowrap h-100\">\n        <main\n          className={`c-ComponentCreator__content d-flex flex-row flex-nowrap ${\n            isDevMode ? \" developer-mode\" : \"\"\n          }`}\n          tabIndex=\"0\"\n          onKeyDown={(e) =>\n            handleKeyDown(\n              e,\n              componentConfig,\n              dispatchComponentsConfig,\n              selectedComponent,\n              dispatchSelectedComponent,\n              clientRect\n            )\n          }\n          onKeyUp={handleKeyUp}\n          onClick={handleOnClick}\n        >\n          {(!floatingLayout || !floatingLayout.selected) && (\n            <Aside\n              persistent={false}\n              isDevMode={isDevMode}\n              childItems={[{ name: \"ArmoryLib\", props: { variant: 1 } }]}\n              clientRect={clientRect}\n              position=\"left\"\n            />\n          )}\n          <Main>\n            <ComponentContainerWrapper\n              clientRect={clientRect}\n              dispatchSelectedComponent={dispatchSelectedComponent}\n              dropLocation={location}\n              isDevMode={isDevMode}\n              selectedComponent={selectedComponent}\n              setClientRect={setClientRect}\n              setDropLocation={setDropLocationDebounced}\n              socket={socket}\n            />\n          </Main>\n          {(!floatingLayout || !floatingLayout.selected) && (\n            <Aside\n              persistent={false}\n              isDevMode={isDevMode}\n              childItems={[\n                {\n                  name: \"PropertiesWidget\",\n                  props: { title: \"Component Details\", socket },\n                },\n                {\n                  name: \"CodeViewerWidget\",\n                  props: { title: \"Generated Code\", dispatchSelectedComponent },\n                },\n              ]}\n              selectedComponent={selectedComponent}\n              position=\"right\"\n              styles={{ fontSize: \"0.8rem\" }}\n            />\n          )}\n        </main>\n        <ToolActionContainer />\n        {floatingLayout && floatingLayout.selected && isDevMode && (\n          <WidgetContainer\n            widgetDragging={widgetDragging}\n            ref={draggable}\n            persistent={false}\n            isDevMode={isDevMode}\n            childItems={[\n              { name: \"ArmoryLib\", props: { variant: 2 } },\n              {\n                name: \"PropertiesWidget\",\n                props: { title: \"Component Details\", socket },\n              },\n              {\n                name: \"CodeViewerWidget\",\n                props: { title: \"Generated Code\", dispatchSelectedComponent },\n              },\n            ]}\n            clientRect={clientRect}\n            position=\"left\"\n          />\n        )}\n        <Logger isDevMode={isDevMode} user={user} />\n      </div>\n    </DndProvider>\n  );\n};\n\nComponentCreator.propTypes = {\n  componentConfig: PropTypes.object,\n  dispatchComponentsConfig: PropTypes.func,\n  selectedComponent: PropTypes.string,\n  dispatchSelectedComponent: PropTypes.func,\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = createPropsSelector({\n  componentConfig: getPresentComponentsConfig,\n  isMobile: isMobile,\n  selectedComponent: getSelectedComponent,\n  toggles: getToggles,\n  user: getUserDetails,\n});\n\nconst mapDispatchToProps = {\n  dispatchComponentsConfig,\n  dispatchSelectedComponent,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComponentCreator);\n","import ComponentCreator from \"./ComponentCreator.jsx\";\n\nexport default ComponentCreator;"],"names":["location","elmnt","handle","cb","pos1","pos2","pos3","pos4","dragHandle","document","getElementById","id","elementDrag","e","preventDefault","window","event","clientX","clientY","style","top","offsetTop","left","offsetLeft","closeDragElement","setTimeout","onmouseup","onmousemove","onmousedown","setDropLocation","locationIncoming","mapStateToProps","createPropsSelector","componentConfig","getPresentComponentsConfig","isMobile","selectedComponent","getSelectedComponent","toggles","getToggles","user","getUserDetails","mapDispatchToProps","dispatchComponentsConfig","dispatchSelectedComponent","connect","props","useState","clientRect","setClientRect","socket","setSocket","widgetDragging","setWidgetDragging","setDropLocationDebounced","Helper","useEventHandler","handleKeyDown","handleKeyUp","handleOnClick","draggable","useRef","dndBackend","TouchBackend","HTML5Backend","devModeToggle","find","toggle","name","floatingLayout","isDevMode","selected","useEffect","host","API_CONFIG","newSocket","io","close","registerDragFor","DndProvider","debugMode","backend","className","tabIndex","onKeyDown","onKeyUp","onClick","Aside","persistent","childItems","variant","position","Main","ComponentContainerWrapper","dropLocation","title","styles","fontSize","ToolActionContainer","WidgetContainer","ref","Logger"],"sourceRoot":""}