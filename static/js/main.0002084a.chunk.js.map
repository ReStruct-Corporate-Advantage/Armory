{"version":3,"sources":["app/pages/ComponentCreator/actions.js","app/pages/Home/actions.js","app/pages/ComponentSelector/actions.js","app/constants/types.js","app/pages/Home/reducer.js","app/utils/historyUtil.js","app/pages/ComponentCreator/reducer.js","app/pages/ComponentSelector/reducer.js","app/reducer.js","app/components/PageLoader/PageLoader.jsx","app/components/PageLoader/index.js","app/router.jsx","app/serviceWorker.js","app/main.js"],"names":["UPDATE_FORM_VALUES","UPDATE_FORM_ERRORS","IS_MOBILE","DISPATCH_CARD_POSITION","DISPATCH_LAYOUT","DISPATCH_PREVIOUS_LAYOUT","DISPATCH_COMPONENT_CONFIG","DISPATCH_HISTORY","dispatchDeviceType","isMobile","type","payload","dispatchLayout","layout","dispatchPreviousLayout","previousLayout","dispatchComponentsConfig","componentConfig","dispatchHistory","history","ITEM_TYPE","ARMAMENT","ARMAMENT_WRAPPER","ELEMENT_TYPE","PARENT","CONTAINER","COMPONENT","FRAGMENT_TYPE","ENCLOSER","TAG","SPACER","ATTRIBUTE","HANDLER","TEXT","initialState","Immutable","Map","reducer","state","action","mergeDeep","past","present","undefined","future","previous","length","newPast","slice","next","newFuture","newPresent","boardId","count","components","name","index","indent","descriptor","allowChildren","defaultHeight","defaultWidth","displayName","elemType","handlers","id","children","historyProvider","combineReducers","data","pages","home","homeReducer","componentCreator","componentCreatorReducer","componentSelector","componentSelectorReducer","PageLoader","props","className","defaultProps","LoadableHome","Loadable","loader","loading","LoadableComponentCreator","LoadableComponentSelector","LoadableLogin","LoadableJoin","LoadableForgotPassword","LoadableUserProfile","LoadableNotifications","LoadableSettings","Router","store","this","basename","exact","path","component","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","immutable","compose","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0002084a.chunk.js","sourcesContent":["export const UPDATE_FORM_VALUES = \"UPDATE_SECTION_DISPLAY_FORM_VALUES\"\nexport const UPDATE_FORM_ERRORS = \"UPDATE_SECTION_DISPLAY_FORM_ERRORS\"\nexport const IS_MOBILE = \"IS_MOBILE\";\nexport const DISPATCH_CARD_POSITION = \"DISPATCH_CARD_POSITION\";\nexport const DISPATCH_LAYOUT = \"DISPATCH_LAYOUT\";\nexport const DISPATCH_PREVIOUS_LAYOUT = \"DISPATCH_PREVIOUS_LAYOUT\";\nexport const DISPATCH_COMPONENT_CONFIG = \"DISPATCH_COMPONENT_CONFIG\";\nexport const DISPATCH_HISTORY = \"DISPATCH_HISTORY\";\n\nexport const dispatchDeviceType = (isMobile) => {\n    return {\n        type: IS_MOBILE,\n        payload: isMobile\n    }\n}\n\nexport const updateFormValues = (formValues) => {\n    return {\n        type: UPDATE_FORM_VALUES,\n        payload: formValues\n    }\n}\n\nexport const updateFormErrors = (formErrors) => {\n    return {\n        type: UPDATE_FORM_ERRORS,\n        payload: formErrors\n    }\n}\n\nexport const dispatchCardPosition = (formErrors) => {\n    return {\n        type: DISPATCH_CARD_POSITION,\n        payload: formErrors\n    }\n}\n\nexport const dispatchLayout = (layout) => {\n    return {\n        type: DISPATCH_LAYOUT,\n        payload: {layout}\n    }\n}\n\nexport const dispatchPreviousLayout = (previousLayout) => {\n    return {\n        type: DISPATCH_PREVIOUS_LAYOUT,\n        payload: {previousLayout}\n    }\n}\n\nexport const dispatchComponentsConfig = componentConfig => {\n    return {\n        type: DISPATCH_COMPONENT_CONFIG,\n        payload: {componentConfig}\n    }\n}\n\nexport const dispatchHistory = history => {\n    return {\n        type: DISPATCH_HISTORY,\n        payload: {history}\n    }\n}","export const UPDATE_FORM_VALUES = \"UPDATE_SECTION_DISPLAY_FORM_VALUES\"\nexport const UPDATE_FORM_ERRORS = \"UPDATE_SECTION_DISPLAY_FORM_ERRORS\"\nexport const IS_MOBILE = \"IS_MOBILE\";\n\nexport const dispatchDeviceType = (isMobile) => {\n    return {\n        type: IS_MOBILE,\n        payload: isMobile\n    }\n}\n\nexport const updateFormValues = (formValues) => {\n    return {\n        type: UPDATE_FORM_VALUES,\n        payload: formValues\n    }\n}\n\nexport const updateFormErrors = (formErrors) => {\n    return {\n        type: UPDATE_FORM_ERRORS,\n        payload: formErrors\n    }\n}\n","export const UPDATE_FORM_VALUES = \"UPDATE_COMPONENT_SELECTOR_FORM_VALUES\"\nexport const UPDATE_FORM_ERRORS = \"UPDATE_COMPONENT_SELECTOR_FORM_ERRORS\"\nexport const IS_MOBILE = \"IS_MOBILE\";\n\nexport const dispatchDeviceType = (isMobile) => {\n    return {\n        type: IS_MOBILE,\n        payload: isMobile\n    }\n}\n\nexport const updateFormValues = (formValues) => {\n    return {\n        type: UPDATE_FORM_VALUES,\n        payload: formValues\n    }\n}\n\nexport const updateFormErrors = (formErrors) => {\n    return {\n        type: UPDATE_FORM_ERRORS,\n        payload: formErrors\n    }\n}","const ITEM_TYPE = {\n    ARMAMENT: \"armament\",\n    ARMAMENT_WRAPPER: \"armamentWrapper\"\n}\n\nconst ELEMENT_TYPE = {\n    PARENT: \"parent\",\n    CONTAINER: \"container\",\n    COMPONENT: \"component\"\n}\n\nconst FRAGMENT_TYPE = {\n    ENCLOSER: \"encloser\",\n    TAG: \"tag\",\n    SPACER: \"spacer\",\n    ATTRIBUTE: \"attribute\",\n    HANDLER: \"handler\",\n    TEXT: \"text\"\n}\n\nexport {ITEM_TYPE, ELEMENT_TYPE, FRAGMENT_TYPE};","import Immutable from \"immutable\"\nimport {IS_MOBILE, UPDATE_FORM_ERRORS, UPDATE_FORM_VALUES} from \"./actions\"\n\nconst initialState = Immutable.Map({\n    layout: 30\n})\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case IS_MOBILE:\n        case UPDATE_FORM_ERRORS:\n        case UPDATE_FORM_VALUES:\n            return state.mergeDeep(action.payload)\n        default:\n            return state\n    }\n}\n\nexport default reducer","function history(reducer) {\n    // Call the reducer with empty action to populate the initial state\n    const initialState = {\n      past: [],\n      present: reducer(undefined, {}),\n      future: []\n    }\n  \n    // Return a reducer that handles undo and redo\n    return function (state = initialState, action) {\n      const { past, present, future } = state\n  \n      switch (action.type) {\n        case 'UNDO':\n          const previous = past[past.length - 1]\n          const newPast = past.slice(0, past.length - 1)\n          return {\n            past: newPast,\n            present: previous,\n            future: [present, ...future]\n          }\n        case 'REDO':\n          const next = future[0]\n          const newFuture = future.slice(1)\n          return {\n            past: [...past, present],\n            present: next,\n            future: newFuture\n          }\n        default:\n          // Delegate handling the action to the passed reducer\n          const newPresent = reducer(present, action)\n          if (present === newPresent) {\n            return state\n          }\n          return {\n            past: [...past, present],\n            present: newPresent,\n            future: []\n          }\n      }\n    }\n  }\n\n  export default history;","import Immutable from \"immutable\";\nimport { ELEMENT_TYPE } from \"../../constants/types\";\nimport historyProvider from \"../../utils/historyUtil\";\nimport {\n    DISPATCH_CARD_POSITION,\n    DISPATCH_COMPONENT_CONFIG,\n    DISPATCH_HISTORY,\n    DISPATCH_LAYOUT,\n    DISPATCH_PREVIOUS_LAYOUT,\n    IS_MOBILE,UPDATE_FORM_ERRORS,\n    UPDATE_FORM_VALUES\n} from \"./actions\";\n\nconst initialState = Immutable.Map({\n    componentConfig: {\n        boardId: 1,\n        count: 0,\n        components: [\n            {\n                name: \"Root\",\n                index: 1,\n                indent: 0,\n                descriptor: {\n                    allowChildren: true,\n                    defaultHeight: \"100%\",\n                    defaultWidth: \"100%\",\n                    displayName: \"Root\",\n                    elemType: \"div\",\n                    handlers: [],\n                    id: \"root\",\n                    type: ELEMENT_TYPE.PARENT,\n                    children: []\n                }\n            }\n        ]\n    }\n})\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case IS_MOBILE:\n        case DISPATCH_CARD_POSITION:\n        case DISPATCH_COMPONENT_CONFIG:\n        case DISPATCH_HISTORY:\n        case DISPATCH_LAYOUT:\n        case DISPATCH_PREVIOUS_LAYOUT:\n        case UPDATE_FORM_ERRORS:\n        case UPDATE_FORM_VALUES:\n            return state.mergeDeep(action.payload)\n        default:\n            return state\n    }\n}\n\nexport default historyProvider(reducer);","import Immutable from \"immutable\"\nimport {IS_MOBILE, UPDATE_FORM_ERRORS, UPDATE_FORM_VALUES} from \"./actions\"\n\nconst initialState = Immutable.Map()\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case IS_MOBILE:\n        case UPDATE_FORM_ERRORS:\n        case UPDATE_FORM_VALUES:\n            return state.mergeDeep(action.payload)\n        default:\n            return state\n    }\n}\n\nexport default reducer","import {combineReducers} from \"redux\"\nimport homeReducer from \"./pages/Home/reducer\"\nimport componentCreatorReducer from \"./pages/ComponentCreator/reducer\"\nimport componentSelectorReducer from \"./pages/ComponentSelector/reducer\"\n\nexport default combineReducers({\n    data: combineReducers({\n        pages: combineReducers({\n            home: homeReducer,\n            componentCreator: componentCreatorReducer,\n            componentSelector: componentSelectorReducer\n        })\n    })\n})\n","import React from \"react\";\n\nconst PageLoader = props => {\n  return (\n    <div className=\"c-PageLoader\">\n      <div className=\"c-PageLoader__lds-ripple\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n      // <div className=\"c-PageLoader\">\n      //   <div className=\"is-animate\">\n      //     <div className=\"l\">l</div>\n      //     <div className=\"l\">o</div>\n      //     <div className=\"l\">a</div>\n      //     <div className=\"l\">d</div>\n      //     <div className=\"l\">i</div>\n      //     <div className=\"l\">n</div>\n      //     <div className=\"l\">g</div>\n      //   </div>\n      // </div>\n};\n\nPageLoader.defaultProps = {\n\n};\n\nPageLoader.propTypes = {\n\n};\n\nexport default PageLoader;","import PageLoader from \"./PageLoader.jsx\";\n\nexport default PageLoader;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Provider} from \"react-redux\"\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Loadable from \"react-loadable\"\nimport PageLoader from \"./components/PageLoader\";\n\nconst LoadableHome = Loadable({\n    loader: () => import(\"./pages/Home\"),\n    loading: PageLoader\n})\n\nconst LoadableComponentCreator = Loadable({\n    loader: () => import(\"./pages/ComponentCreator\"),\n    loading: PageLoader\n})\n\nconst LoadableComponentSelector = Loadable({\n    loader: () => import(\"./pages/ComponentSelector\"),\n    loading: PageLoader\n})\n\nconst LoadableLogin = Loadable({\n    loader: () => import(\"./pages/Login\"),\n    loading: PageLoader\n})\n\nconst LoadableJoin = Loadable({\n    loader: () => import(\"./pages/Join\"),\n    loading: PageLoader\n})\n\nconst LoadableForgotPassword = Loadable({\n    loader: () => import(\"./pages/ForgotPassword\"),\n    loading: PageLoader\n})\n\nconst LoadableUserProfile = Loadable({\n    loader: () => import(\"./pages/UserProfile\"),\n    loading: PageLoader\n})\n\nconst LoadableNotifications = Loadable({\n    loader: () => import(\"./pages/Notifications\"),\n    loading: PageLoader\n})\n\nconst LoadableSettings = Loadable({\n    loader: () => import(\"./pages/Settings\"),\n    loading: PageLoader\n})\n\nclass Router extends React.Component {\n\n    render() {\n        const {store} = this.props\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename=\"/\">\n                    <Route exact path=\"/\" component={LoadableHome} />\n                    <Route exact path=\"/:user\" component={LoadableComponentCreator} />\n                    <Route exact path=\"/:user/create\" component={LoadableComponentCreator} />\n                    <Route exact path=\"/:user/view\" component={LoadableComponentSelector} />\n                    <Route exact path=\"/:user/login\" component={LoadableLogin} />\n                    <Route exact path=\"/:user/join\" component={LoadableJoin} />\n                    <Route exact path=\"/:user/resetPassword\" component={LoadableForgotPassword} />\n                    <Route exact path=\"/:user/profile\" component={LoadableUserProfile} />\n                    <Route exact path=\"/:user/notifications\" component={LoadableNotifications} />\n                    <Route exact path=\"/:user/settings\" component={LoadableSettings} />\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}\n\nRouter.propTypes = {\n    store: PropTypes.object\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\"\nimport Immutable from \"immutable\"\nimport {createStore, applyMiddleware, compose} from \"redux\"\nimport reducer from \"./reducer\";\nimport Router from \"./router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./main.scss\"\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers =\ntypeof window === \"object\" &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  serialize: { // prettier-ignore\n    immutable: Immutable\n  }\n}) : compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(<Router store={store} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}